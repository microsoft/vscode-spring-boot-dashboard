{
  "name": "vscode-spring-boot-dashboard",
  "displayName": "Spring Boot Dashboard",
  "description": "Spring Boot Dashboard for VS Code",
  "version": "0.7.1",
  "license": "MIT",
  "icon": "resources/logo.png",
  "publisher": "vscjava",
  "aiKey": "f934e884-8ca2-453e-914d-eee9e8f179c4",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-spring-boot-dashboard.git"
  },
  "homepage": "https://github.com/Microsoft/vscode-spring-boot-dashboard",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:spring-boot-dashboard.refresh",
    "onView:spring.apps",
    "onView:spring.beans",
    "onView:spring.mappings",
    "onView:memory.memoryView"
  ],
  "capabilities": {
    "virtualWorkspaces": false
  },
  "main": "./out/src/extension",
  "contributes": {
    "icons": {
      "spring-bean": {
        "description": "bean icon",
        "default": {
          "fontPath": "./resources/icons.woff",
          "fontCharacter": "\\e900"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "spring",
          "icon": "resources/logo.png",
          "title": "Spring Boot Dashboard"
        }
      ]
    },
    "views": {
      "spring": [
        {
          "id": "spring.apps",
          "name": "Apps",
          "when": "java:serverMode",
          "contextualTitle": "Spring",
          "icon": "resources/logo.png"
        },
        {
          "id": "spring.beans",
          "name": "Beans",
          "when": "java:serverMode",
          "contextualTitle": "Spring",
          "icon": "resources/logo.png"
        },
        {
          "id": "spring.mappings",
          "name": "Endpoint Mappings",
          "when": "java:serverMode",
          "contextualTitle": "Spring",
          "icon": "resources/logo.png"
        },
        {
          "type": "webview",
          "id": "memory.memoryView",
          "when": "java:serverMode && spring.gcPauses:showMode == defined && spring.gcPauses:hasLiveProcess == true",
          "name": "Memory"
        }
      ]
    },
    "viewsWelcome": [],
    "commands": [
      {
        "command": "spring-boot-dashboard.refresh",
        "title": "Refresh",
        "category": "Spring Boot Dashboard",
        "icon": "$(refresh)"
      },
      {
        "command": "spring-boot-dashboard.localapp.run",
        "title": "Run",
        "category": "Spring Boot Dashboard",
        "icon": "$(play)"
      },
      {
        "command": "spring-boot-dashboard.localapp.stop",
        "title": "Stop",
        "category": "Spring Boot Dashboard",
        "icon": "$(debug-stop)"
      },
      {
        "command": "spring-boot-dashboard.localapp.open",
        "title": "Open In Browser",
        "category": "Spring Boot Dashboard",
        "icon": "$(globe)"
      },
      {
        "command": "spring-boot-dashboard.localapp.debug",
        "title": "Debug",
        "category": "Spring Boot Dashboard",
        "icon": "$(debug-alt-small)"
      },
      {
        "command": "spring-boot-dashboard.localapp.run-multiple",
        "title": "Run ...",
        "category": "Spring Boot Dashboard",
        "icon": "$(run-all)"
      },
      {
        "command": "spring-boot-dashboard.localapp.stop-multiple",
        "title": "Stop ...",
        "category": "Spring Boot Dashboard",
        "icon": "$(stop-circle)"
      },
      {
        "command": "spring-boot-dashboard.localapp.debug-multiple",
        "title": "Debug ...",
        "category": "Spring Boot Dashboard",
        "icon": "$(debug)"
      },
      {
        "command": "sts/livedata/refresh",
        "title": "Refresh Live Connection",
        "category": "Spring Boot Dashboard",
        "icon": "$(refresh)"
      },
      {
        "command": "spring.staticData.refresh",
        "title": "Refresh",
        "category": "Spring Boot Dashboard",
        "icon": "$(refresh)"
      },
      {
        "command": "spring.dashboard.endpoint.open",
        "title": "Open",
        "category": "Spring Boot Dashboard",
        "icon": "$(globe)"
      },
      {
        "command": "spring.dashboard.endpoint.navigate",
        "title": "Go to",
        "category": "Spring Boot Dashboard",
        "icon": "$(go-to-file)"
      },
      {
        "command": "spring.dashboard.bean.open",
        "title": "Open",
        "category": "Spring Boot Dashboard",
        "icon": "$(go-to-file)"
      },
      {
        "command": "spring.dashboard.bean.navigate",
        "title": "Open",
        "category": "Spring Boot Dashboard",
        "icon": "$(go-to-file)"
      },
      {
        "command": "spring.dashboard.mapping.showAll",
        "title": "Show All Endpoints",
        "category": "Spring Boot Dashboard",
        "icon": "$(list-flat)"
      },
      {
        "command": "spring.dashboard.mapping.showDefined",
        "title": "Show Defined Endpoints",
        "category": "Spring Boot Dashboard",
        "icon": "$(list-filter)"
      },
      {
        "command": "spring.dashboard.bean.showAll",
        "title": "Show All Beans",
        "category": "Spring Boot Dashboard",
        "icon": "$(list-flat)"
      },
      {
        "command": "spring.dashboard.bean.showDefined",
        "title": "Show Defined Beans",
        "category": "Spring Boot Dashboard",
        "icon": "$(list-filter)"
      },
      {
        "command": "spring.dashboard.bean.showDependencies",
        "title": "Show Dependencies",
        "category": "Spring Boot Dashboard",
        "icon": "$(type-hierarchy-sub)"
      },
      {
        "command": "spring.dashboard.bean.showInjectedInto",
        "title": "Show Injected Into",
        "category": "Spring Boot Dashboard",
        "icon": "$(type-hierarchy-super)"
      },
      {
        "command": "spring.dashboard.bean.showHierarchy",
        "title": "Show Bean Hierarchy",
        "category": "Spring Boot Dashboard",
        "icon": "$(type-hierarchy)"
      },
      {
        "command": "spring.promptToEnableActuator",
        "title": "Live Information Unavailable",
        "category": "Spring Boot Dashboard",
        "icon": "$(warning)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "sts/livedata/refresh",
          "when": "never"
        },
        {
          "command": "spring-boot-dashboard.localapp.run",
          "when": "never"
        },
        {
          "command": "spring-boot-dashboard.localapp.stop",
          "when": "never"
        },
        {
          "command": "spring-boot-dashboard.localapp.open",
          "when": "never"
        },
        {
          "command": "spring-boot-dashboard.localapp.debug",
          "when": "never"
        },
        {
          "command": "spring-boot-dashboard.refresh",
          "when": "never"
        },
        {
          "command": "spring.staticData.refresh",
          "when": "never"
        },
        {
          "command": "spring.dashboard.bean.navigate",
          "when": "never"
        },
        {
          "command": "spring.dashboard.bean.open",
          "when": "never"
        },
        {
          "command": "spring.dashboard.endpoint.navigate",
          "when": "never"
        },
        {
          "command": "spring.dashboard.endpoint.open",
          "when": "never"
        },
        {
          "command": "spring.dashboard.bean.showHierarchy",
          "when": "never"
        },
        {
          "command": "spring.dashboard.bean.showDependencies",
          "when": "never"
        },
        {
          "command": "spring.dashboard.bean.showInjectedInto",
          "when": "never"
        },
        {
          "command": "spring.promptToEnableActuator",
          "when": "never"
        }
      ],
      "view/title": [
        {
          "command": "spring-boot-dashboard.localapp.run-multiple",
          "when": "view == spring.apps",
          "group": "navigation@2"
        },
        {
          "command": "spring-boot-dashboard.localapp.stop-multiple",
          "when": "view == spring.apps",
          "group": "navigation@3"
        },
        {
          "command": "spring-boot-dashboard.refresh",
          "when": "view == spring.apps",
          "group": "navigation@5"
        },
        {
          "command": "spring.dashboard.mapping.showDefined",
          "when": "view == spring.mappings && spring.mappings:showMode != defined && spring.mappings:hasLiveProcess == true",
          "group": "navigation@5"
        },
        {
          "command": "spring.dashboard.mapping.showAll",
          "when": "view == spring.mappings && spring.mappings:showMode != all && spring.mappings:hasLiveProcess == true",
          "group": "navigation@8"
        },
        {
          "command": "spring.dashboard.bean.showDefined",
          "when": "view == spring.beans && spring.beans:showMode != defined && spring.beans:hasLiveProcess == true",
          "group": "navigation@5"
        },
        {
          "command": "spring.dashboard.bean.showAll",
          "when": "view == spring.beans && spring.beans:showMode != all && spring.beans:hasLiveProcess == true",
          "group": "navigation@8"
        },
        {
          "command": "spring.dashboard.bean.showDependencies",
          "when": "view == references-view.tree && reference-list.hasResult && reference-list.source == beanHierarchy && beanHierarchy:direction != dependencies",
          "group": "navigation@1"
        },
        {
          "command": "spring.dashboard.bean.showInjectedInto",
          "when": "view == references-view.tree && reference-list.hasResult && reference-list.source == beanHierarchy && beanHierarchy:direction != injectedInto",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "spring-boot-dashboard.localapp.run",
          "when": "view == spring.apps && viewItem == BootApp_inactive",
          "group": "action@5"
        },
        {
          "command": "spring-boot-dashboard.localapp.debug",
          "when": "view == spring.apps && viewItem == BootApp_inactive",
          "group": "action@6"
        },
        {
          "command": "spring-boot-dashboard.localapp.stop",
          "when": "view == spring.apps && viewItem == BootApp_running",
          "group": "action@8"
        },
        {
          "command": "spring-boot-dashboard.localapp.open",
          "when": "view == spring.apps && viewItem == BootApp_running",
          "group": "action@a"
        },
        {
          "command": "spring-boot-dashboard.localapp.run",
          "when": "view == spring.apps && viewItem == BootApp_inactive",
          "group": "inline@5"
        },
        {
          "command": "spring-boot-dashboard.localapp.debug",
          "when": "view == spring.apps && viewItem == BootApp_inactive",
          "group": "inline@6"
        },
        {
          "command": "spring-boot-dashboard.localapp.stop",
          "when": "view == spring.apps && viewItem == BootApp_running",
          "group": "inline@8"
        },
        {
          "command": "spring-boot-dashboard.localapp.open",
          "when": "view == spring.apps && viewItem == BootApp_running",
          "group": "inline@a"
        },
        {
          "command": "spring-boot-dashboard.localapp.run-multiple",
          "when": "view == spring.apps && !viewItem",
          "group": "action@11"
        },
        {
          "command": "spring-boot-dashboard.localapp.debug-multiple",
          "when": "view == spring.apps && !viewItem",
          "group": "action@12"
        },
        {
          "command": "spring-boot-dashboard.localapp.stop-multiple",
          "when": "view == spring.apps && !viewItem",
          "group": "action@13"
        },
        {
          "command": "sts/livedata/refresh",
          "when": "view == spring.beans && viewItem == liveProcess",
          "group": "inline@5"
        },
        {
          "command": "sts/livedata/refresh",
          "when": "view == spring.mappings && viewItem == liveProcess",
          "group": "inline@5"
        },
        {
          "command": "spring.staticData.refresh",
          "when": "view == spring.beans && viewItem =~ /^bootApp/",
          "group": "inline@5"
        },
        {
          "command": "spring.promptToEnableActuator",
          "when": "view == spring.beans && viewItem =~ /^bootApp(?=.*?\\b\\+noActuator\\b)(?=.*?\\b\\+running\\b)/",
          "group": "inline@5"
        },
        {
          "command": "spring.staticData.refresh",
          "when": "view == spring.mappings && viewItem =~ /^bootApp/",
          "group": "inline@5"
        },
        {
          "command": "spring.promptToEnableActuator",
          "when": "view == spring.mappings && viewItem =~ /^bootApp(?=.*?\\b\\+noActuator\\b)(?=.*?\\b\\+running\\b)/",
          "group": "inline@5"
        },
        {
          "command": "spring.dashboard.endpoint.open",
          "when": "view == spring.mappings && viewItem =~ /spring:endpoint(?=.*?\\b\\+GET\\b)/",
          "group": "inline@5"
        },
        {
          "command": "spring.dashboard.bean.showHierarchy",
          "when": "view == spring.beans && viewItem == spring:bean",
          "group": "inline@5"
        },
        {
          "command": "spring.dashboard.bean.showDependencies",
          "when": "viewItem == spring:bean",
          "group": "action@5"
        },
        {
          "command": "spring.dashboard.bean.showInjectedInto",
          "when": "viewItem == spring:bean",
          "group": "action@7"
        }
      ]
    },
    "configuration": {
      "title": "Spring Boot Dashboard",
      "properties": {
        "spring.dashboard.openWith": {
          "default": "integrated",
          "type": "string",
          "enum": [
            "integrated",
            "external"
          ],
          "enumDescriptions": [
            "VS Code's integrated browser",
            "External default browser"
          ],
          "scope": "window",
          "description": "Defines which browser to use when opening Spring Boot apps."
        },
        "spring.dashboard.openUrl": {
          "default": "http://localhost:{port}{contextPath}",
          "type": "string",
          "scope": "window",
          "description": "Defines which URL is opened when opening Spring Boot apps. Uses {port} and {contextPath} as placeholders."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p .",
    "watch": "tsc -watch -p .",
    "prepublish": "node scripts/build-java-ext.js",
    "test": "npm run compile && node ./out/test/runTest.js",
    "tslint": "tslint -t verbose src/**/*.ts",
    "update-tpn": "node scripts/update-third-party-notice.js"
  },
  "devDependencies": {
    "@types/d3": "^7.1.0",
    "@types/glob": "^7.2.0",
    "@types/lodash": "^4.14.186",
    "@types/mocha": "^9.1.1",
    "@types/node": "^14.18.32",
    "@types/uuid": "^3.4.10",
    "@types/vscode": "1.63.0",
    "@vscode/test-electron": "^2.1.5",
    "mocha": "^9.2.2",
    "tslint": "^6.1.3",
    "typescript": "^4.8.4"
  },
  "extensionDependencies": [
    "Pivotal.vscode-spring-boot",
    "redhat.java",
    "vscjava.vscode-java-debug"
  ],
  "dependencies": {
    "@pivotal-tools/jvm-launch-utils": "0.0.11",
    "@vscode/webview-ui-toolkit": "^1.0.0",
    "chart.js": "^3.9.1",
    "chartjs": "^0.3.24",
    "chartjs-adapter-moment": "^1.0.0",
    "get-port": "^5.1.1",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "pidtree": "^0.5.0",
    "uuid": "^3.4.0",
    "vscode-extension-telemetry-wrapper": "^0.13.2",
    "vscode-languageclient": "^7.0.0"
  }
}
